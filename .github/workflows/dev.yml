# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: SvelteKit Deploy (Dev)

on:
  schedule:
    - cron: '0 * * * 0' # Every Sunday of the month
  push:
    branches: ['dev']
  pull_request_target:
    branches: ['dev']    
  workflow_dispatch:
     inputs:
      dry_run:
        description: 'Dry run'
        # default: false
        default: true
        required: true
        type: boolean
concurrency: # Multiple jobs should NOT run at the same time
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      FLY_API_TOKEN: ${{ secrets.FLYIO_ACCESS }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_PUBLIC_SERVER_HTTP_ORIGIN: ${{ secrets.PUBLIC_SERVER_HTTP_ORIGIN }}
          envkey_SERVER_HOME_DOMAIN: ${{ secrets.SERVER_HOME_DOMAIN }}
          envkey_PUBLIC_SERVER_API_VERSION: ${{ secrets.PUBLIC_SERVER_API_VERSION }}
          envkey_PUBLIC_SERVER_API_RETRY_LIMIT: ${{ secrets.PUBLIC_SERVER_API_RETRY_LIMIT }}
          envkey_SERVER_BOUND_ORGANIZATION: ${{ secrets.SERVER_BOUND_ORGANIZATION }}
          envkey_SERVER_DEFAULT_TIMEZONE: ${{ secrets.SERVER_DEFAULT_TIMEZONE }}
          envkey_SERVER_INDEXING_INTERVAL: ${{ secrets.SERVER_INDEXING_INTERVAL }}
          envkey_SERVER_SUPPORT_EMAIL: ${{ secrets.SERVER_SUPPORT_EMAIL }}
          envkey_AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          envkey_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          envkey_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          envkey_GITHUB_CLIENT_ID: ${{ secrets._GITHUB_CLIENT_ID }}
          envkey_GITHUB_CLIENT_SECRET: ${{ secrets._GITHUB_CLIENT_SECRET }}
          envkey_FIREBASE_VAPID_KEY: ${{ secrets.FIREBASE_VAPID_KEY }}
          envkey_FIREBASE_CONFIG_API_KEY: ${{ secrets.FIREBASE_CONFIG_API_KEY }}
          envkey_FIREBASE_CONFIG_AUTH_DOMAIN: ${{ secrets.FIREBASE_CONFIG_AUTH_DOMAIN }}
          envkey_FIREBASE_CONFIG_PROJECT_ID: ${{ secrets.FIREBASE_CONFIG_PROJECT_ID }}
          envkey_FIREBASE_CONFIG_STORAGE_BUCKET: ${{ secrets.FIREBASE_CONFIG_STORAGE_BUCKET }}
          envkey_FIREBASE_CONFIG_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_CONFIG_MESSAGING_SENDER_ID }}
          envkey_FIREBASE_CONFIG_APP_ID: ${{ secrets.FIREBASE_CONFIG_APP_ID }}
          envkey_FIREBASE_CONFIG_MEASUREMENT_ID: ${{ secrets.FIREBASE_CONFIG_MEASUREMENT_ID }}
          envkey_S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          envkey_S3_SECRET_KEY_ID: ${{ secrets.S3_SECRET_KEY_ID }}
          envkey_S3_BUCKET_ID: ${{ secrets.S3_BUCKET_ID }}
          envkey_S3_PUB_BUCKET_ID: ${{ secrets.S3_PUB_BUCKET_ID }}
          envkey_TINYMCE_API_KEY: ${{ secrets.TINYMCE_API_KEY }}
          envkey_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          fail_on_empty: true
          sort_keys: false
      - name: Write Sentry resource file
        run: |
          echo $SENTRY_AUTH_TOKEN >> sentry_token.txt
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to fly.io
        if: ${{ inputs.dry_run == false && github.event_name != 'pull_request' }}
        run: | 
         echo "Run RELEASE" >> release
         flyctl deploy --remote-only -a ubcafe-dev
      - name: Run basic test
        if: ${{ inputs.dry_run == true || github.event_name == 'pull_request' }}
        run: |
         file .env
         docker build -t dishout:latest .
      #- run: flyctl deploy --local-only -a ubcafe
